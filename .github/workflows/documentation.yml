name: Documentation

on:
  push:
    branches: [ master, release-* ]
  pull_request:
    branches: [ master, release-* ]

jobs:
  pre-conditions:
    name: Pre-conditions
    runs-on: [ubuntu-latest]
    outputs:
      run_rest_jobs: ${{ steps.set_output.outputs.run_jobs }}

    steps:
      - uses: actions/checkout@v3

      - name: Get specific changed files and see if any of the markdown-files have changed
        id: changed-files-specific
        uses: tj-actions/changed-files@v23.1
        with:
          files: |
            **/*.md

      - name: Set trigger variable
        id: set_output
        run: |
          echo "::set-output name=run_jobs::true"

  quality:
    name: Quality
    needs: pre-conditions
    if: needs.pre-conditions.outputs.run_rest_jobs == 'true'
    runs-on: [ubuntu-latest]

    steps:
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: '8.0'
          tools: composer:v2
          extensions: intl, mbstring, xml

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - uses: actions/checkout@v3

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
            path: ${{ steps.composer-cache.outputs.dir }}
            key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
            restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - uses: actions/download-artifact@v3
        with:
          name: build-data
          path: ${{ github.workspace }}/build

      - name: Lint markdown files
        uses: nosborn/github-action-markdown-cli@v3.1.0
        with:
          files: .
          ignore_path: .markdownlintignore

  build:
    name: Build documentation
    needs: quality
    runs-on: [ubuntu-latest]

    steps:
      - name: Run docs build if any of markdown-files have changed
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: actions/github-script@v6
        with:
          # Token has to be generated on a user account that controls the docs-repository.
          # The _only_ scope to select is "Access public repositories", nothing more.
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'simplesamlphp',
              repo: 'docs',
              workflow_id: 'mk_docs.yml',
              ref: 'main'
            })
